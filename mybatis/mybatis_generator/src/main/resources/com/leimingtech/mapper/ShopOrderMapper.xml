<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leimingtech.mapper.ShopOrderMapper">
  <resultMap id="BaseResultMap" type="com.leimingtech.entity.ShopOrder">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="ORDER_SN" jdbcType="VARCHAR" property="orderSn" />
    <result column="MEMBER_ID" jdbcType="BIGINT" property="memberId" />
    <result column="MEMBER_NAME" jdbcType="VARCHAR" property="memberName" />
    <result column="MEMBER_EMAIL" jdbcType="VARCHAR" property="memberEmail" />
    <result column="PAYMENT_NAME" jdbcType="VARCHAR" property="paymentName" />
    <result column="PAYMENT_CODE" jdbcType="VARCHAR" property="paymentCode" />
    <result column="PAY_ID" jdbcType="INTEGER" property="payId" />
    <result column="PAYMENT_ID" jdbcType="BIGINT" property="paymentId" />
    <result column="PAYMENT_STATE" jdbcType="BIT" property="paymentState" />
    <result column="PAYMENT_TIME" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="ORDER_MESSAGE" jdbcType="VARCHAR" property="orderMessage" />
    <result column="GOODS_NUM" jdbcType="INTEGER" property="goodsNum" />
    <result column="ORDER_AMOUNT" jdbcType="DECIMAL" property="orderAmount" />
    <result column="DISCOUNT_AMOUNT" jdbcType="DECIMAL" property="discountAmount" />
    <result column="GOODS_AMOUNT" jdbcType="DECIMAL" property="goodsAmount" />
    <result column="ORDER_STATUS" jdbcType="BIT" property="orderStatus" />
    <result column="REFUND_AMOUNT" jdbcType="DECIMAL" property="refundAmount" />
    <result column="COMPLETE_TIME" jdbcType="TIMESTAMP" property="completeTime" />
    <result column="ADDRESS_ID" jdbcType="INTEGER" property="addressId" />
    <result column="DADDRESS_ID" jdbcType="INTEGER" property="daddressId" />
    <result column="TRANSPORT_COMPANY_ID" jdbcType="INTEGER" property="transportCompanyId" />
    <result column="TRANSPORT_CODE" jdbcType="VARCHAR" property="transportCode" />
    <result column="TRANSPORT_EXPRESS_CODE" jdbcType="VARCHAR" property="transportExpressCode" />
    <result column="PAY_SN" jdbcType="VARCHAR" property="paySn" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ORDER_SN, MEMBER_ID, MEMBER_NAME, MEMBER_EMAIL, PAYMENT_NAME, PAYMENT_CODE, PAY_ID, 
    PAYMENT_ID, PAYMENT_STATE, PAYMENT_TIME, ORDER_MESSAGE, GOODS_NUM, ORDER_AMOUNT, 
    DISCOUNT_AMOUNT, GOODS_AMOUNT, ORDER_STATUS, REFUND_AMOUNT, COMPLETE_TIME, ADDRESS_ID, 
    DADDRESS_ID, TRANSPORT_COMPANY_ID, TRANSPORT_CODE, TRANSPORT_EXPRESS_CODE, PAY_SN
  </sql>
  <select id="selectByExample" parameterType="com.leimingtech.entity.ShopOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SHOP_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SHOP_ORDER
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from SHOP_ORDER
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.leimingtech.entity.ShopOrderExample">
    delete from SHOP_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.leimingtech.entity.ShopOrder">
    insert into SHOP_ORDER (ID, ORDER_SN, MEMBER_ID, 
      MEMBER_NAME, MEMBER_EMAIL, PAYMENT_NAME, 
      PAYMENT_CODE, PAY_ID, PAYMENT_ID, 
      PAYMENT_STATE, PAYMENT_TIME, ORDER_MESSAGE, 
      GOODS_NUM, ORDER_AMOUNT, DISCOUNT_AMOUNT, 
      GOODS_AMOUNT, ORDER_STATUS, REFUND_AMOUNT, 
      COMPLETE_TIME, ADDRESS_ID, DADDRESS_ID, 
      TRANSPORT_COMPANY_ID, TRANSPORT_CODE, TRANSPORT_EXPRESS_CODE, 
      PAY_SN)
    values (#{id,jdbcType=BIGINT}, #{orderSn,jdbcType=VARCHAR}, #{memberId,jdbcType=BIGINT}, 
      #{memberName,jdbcType=VARCHAR}, #{memberEmail,jdbcType=VARCHAR}, #{paymentName,jdbcType=VARCHAR}, 
      #{paymentCode,jdbcType=VARCHAR}, #{payId,jdbcType=INTEGER}, #{paymentId,jdbcType=BIGINT}, 
      #{paymentState,jdbcType=BIT}, #{paymentTime,jdbcType=TIMESTAMP}, #{orderMessage,jdbcType=VARCHAR}, 
      #{goodsNum,jdbcType=INTEGER}, #{orderAmount,jdbcType=DECIMAL}, #{discountAmount,jdbcType=DECIMAL}, 
      #{goodsAmount,jdbcType=DECIMAL}, #{orderStatus,jdbcType=BIT}, #{refundAmount,jdbcType=DECIMAL}, 
      #{completeTime,jdbcType=TIMESTAMP}, #{addressId,jdbcType=INTEGER}, #{daddressId,jdbcType=INTEGER}, 
      #{transportCompanyId,jdbcType=INTEGER}, #{transportCode,jdbcType=VARCHAR}, #{transportExpressCode,jdbcType=VARCHAR}, 
      #{paySn,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.leimingtech.entity.ShopOrder">
    insert into SHOP_ORDER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="orderSn != null">
        ORDER_SN,
      </if>
      <if test="memberId != null">
        MEMBER_ID,
      </if>
      <if test="memberName != null">
        MEMBER_NAME,
      </if>
      <if test="memberEmail != null">
        MEMBER_EMAIL,
      </if>
      <if test="paymentName != null">
        PAYMENT_NAME,
      </if>
      <if test="paymentCode != null">
        PAYMENT_CODE,
      </if>
      <if test="payId != null">
        PAY_ID,
      </if>
      <if test="paymentId != null">
        PAYMENT_ID,
      </if>
      <if test="paymentState != null">
        PAYMENT_STATE,
      </if>
      <if test="paymentTime != null">
        PAYMENT_TIME,
      </if>
      <if test="orderMessage != null">
        ORDER_MESSAGE,
      </if>
      <if test="goodsNum != null">
        GOODS_NUM,
      </if>
      <if test="orderAmount != null">
        ORDER_AMOUNT,
      </if>
      <if test="discountAmount != null">
        DISCOUNT_AMOUNT,
      </if>
      <if test="goodsAmount != null">
        GOODS_AMOUNT,
      </if>
      <if test="orderStatus != null">
        ORDER_STATUS,
      </if>
      <if test="refundAmount != null">
        REFUND_AMOUNT,
      </if>
      <if test="completeTime != null">
        COMPLETE_TIME,
      </if>
      <if test="addressId != null">
        ADDRESS_ID,
      </if>
      <if test="daddressId != null">
        DADDRESS_ID,
      </if>
      <if test="transportCompanyId != null">
        TRANSPORT_COMPANY_ID,
      </if>
      <if test="transportCode != null">
        TRANSPORT_CODE,
      </if>
      <if test="transportExpressCode != null">
        TRANSPORT_EXPRESS_CODE,
      </if>
      <if test="paySn != null">
        PAY_SN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberEmail != null">
        #{memberEmail,jdbcType=VARCHAR},
      </if>
      <if test="paymentName != null">
        #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="paymentCode != null">
        #{paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="payId != null">
        #{payId,jdbcType=INTEGER},
      </if>
      <if test="paymentId != null">
        #{paymentId,jdbcType=BIGINT},
      </if>
      <if test="paymentState != null">
        #{paymentState,jdbcType=BIT},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderMessage != null">
        #{orderMessage,jdbcType=VARCHAR},
      </if>
      <if test="goodsNum != null">
        #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="goodsAmount != null">
        #{goodsAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=BIT},
      </if>
      <if test="refundAmount != null">
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="completeTime != null">
        #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="daddressId != null">
        #{daddressId,jdbcType=INTEGER},
      </if>
      <if test="transportCompanyId != null">
        #{transportCompanyId,jdbcType=INTEGER},
      </if>
      <if test="transportCode != null">
        #{transportCode,jdbcType=VARCHAR},
      </if>
      <if test="transportExpressCode != null">
        #{transportExpressCode,jdbcType=VARCHAR},
      </if>
      <if test="paySn != null">
        #{paySn,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.leimingtech.entity.ShopOrderExample" resultType="java.lang.Integer">
    select count(*) from SHOP_ORDER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update SHOP_ORDER
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderSn != null">
        ORDER_SN = #{record.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null">
        MEMBER_ID = #{record.memberId,jdbcType=BIGINT},
      </if>
      <if test="record.memberName != null">
        MEMBER_NAME = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberEmail != null">
        MEMBER_EMAIL = #{record.memberEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentName != null">
        PAYMENT_NAME = #{record.paymentName,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentCode != null">
        PAYMENT_CODE = #{record.paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.payId != null">
        PAY_ID = #{record.payId,jdbcType=INTEGER},
      </if>
      <if test="record.paymentId != null">
        PAYMENT_ID = #{record.paymentId,jdbcType=BIGINT},
      </if>
      <if test="record.paymentState != null">
        PAYMENT_STATE = #{record.paymentState,jdbcType=BIT},
      </if>
      <if test="record.paymentTime != null">
        PAYMENT_TIME = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderMessage != null">
        ORDER_MESSAGE = #{record.orderMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsNum != null">
        GOODS_NUM = #{record.goodsNum,jdbcType=INTEGER},
      </if>
      <if test="record.orderAmount != null">
        ORDER_AMOUNT = #{record.orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.discountAmount != null">
        DISCOUNT_AMOUNT = #{record.discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.goodsAmount != null">
        GOODS_AMOUNT = #{record.goodsAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.orderStatus != null">
        ORDER_STATUS = #{record.orderStatus,jdbcType=BIT},
      </if>
      <if test="record.refundAmount != null">
        REFUND_AMOUNT = #{record.refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.completeTime != null">
        COMPLETE_TIME = #{record.completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addressId != null">
        ADDRESS_ID = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.daddressId != null">
        DADDRESS_ID = #{record.daddressId,jdbcType=INTEGER},
      </if>
      <if test="record.transportCompanyId != null">
        TRANSPORT_COMPANY_ID = #{record.transportCompanyId,jdbcType=INTEGER},
      </if>
      <if test="record.transportCode != null">
        TRANSPORT_CODE = #{record.transportCode,jdbcType=VARCHAR},
      </if>
      <if test="record.transportExpressCode != null">
        TRANSPORT_EXPRESS_CODE = #{record.transportExpressCode,jdbcType=VARCHAR},
      </if>
      <if test="record.paySn != null">
        PAY_SN = #{record.paySn,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SHOP_ORDER
    set ID = #{record.id,jdbcType=BIGINT},
      ORDER_SN = #{record.orderSn,jdbcType=VARCHAR},
      MEMBER_ID = #{record.memberId,jdbcType=BIGINT},
      MEMBER_NAME = #{record.memberName,jdbcType=VARCHAR},
      MEMBER_EMAIL = #{record.memberEmail,jdbcType=VARCHAR},
      PAYMENT_NAME = #{record.paymentName,jdbcType=VARCHAR},
      PAYMENT_CODE = #{record.paymentCode,jdbcType=VARCHAR},
      PAY_ID = #{record.payId,jdbcType=INTEGER},
      PAYMENT_ID = #{record.paymentId,jdbcType=BIGINT},
      PAYMENT_STATE = #{record.paymentState,jdbcType=BIT},
      PAYMENT_TIME = #{record.paymentTime,jdbcType=TIMESTAMP},
      ORDER_MESSAGE = #{record.orderMessage,jdbcType=VARCHAR},
      GOODS_NUM = #{record.goodsNum,jdbcType=INTEGER},
      ORDER_AMOUNT = #{record.orderAmount,jdbcType=DECIMAL},
      DISCOUNT_AMOUNT = #{record.discountAmount,jdbcType=DECIMAL},
      GOODS_AMOUNT = #{record.goodsAmount,jdbcType=DECIMAL},
      ORDER_STATUS = #{record.orderStatus,jdbcType=BIT},
      REFUND_AMOUNT = #{record.refundAmount,jdbcType=DECIMAL},
      COMPLETE_TIME = #{record.completeTime,jdbcType=TIMESTAMP},
      ADDRESS_ID = #{record.addressId,jdbcType=INTEGER},
      DADDRESS_ID = #{record.daddressId,jdbcType=INTEGER},
      TRANSPORT_COMPANY_ID = #{record.transportCompanyId,jdbcType=INTEGER},
      TRANSPORT_CODE = #{record.transportCode,jdbcType=VARCHAR},
      TRANSPORT_EXPRESS_CODE = #{record.transportExpressCode,jdbcType=VARCHAR},
      PAY_SN = #{record.paySn,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.leimingtech.entity.ShopOrder">
    update SHOP_ORDER
    <set>
      <if test="orderSn != null">
        ORDER_SN = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        MEMBER_ID = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="memberName != null">
        MEMBER_NAME = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberEmail != null">
        MEMBER_EMAIL = #{memberEmail,jdbcType=VARCHAR},
      </if>
      <if test="paymentName != null">
        PAYMENT_NAME = #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="paymentCode != null">
        PAYMENT_CODE = #{paymentCode,jdbcType=VARCHAR},
      </if>
      <if test="payId != null">
        PAY_ID = #{payId,jdbcType=INTEGER},
      </if>
      <if test="paymentId != null">
        PAYMENT_ID = #{paymentId,jdbcType=BIGINT},
      </if>
      <if test="paymentState != null">
        PAYMENT_STATE = #{paymentState,jdbcType=BIT},
      </if>
      <if test="paymentTime != null">
        PAYMENT_TIME = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderMessage != null">
        ORDER_MESSAGE = #{orderMessage,jdbcType=VARCHAR},
      </if>
      <if test="goodsNum != null">
        GOODS_NUM = #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="orderAmount != null">
        ORDER_AMOUNT = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null">
        DISCOUNT_AMOUNT = #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="goodsAmount != null">
        GOODS_AMOUNT = #{goodsAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null">
        ORDER_STATUS = #{orderStatus,jdbcType=BIT},
      </if>
      <if test="refundAmount != null">
        REFUND_AMOUNT = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="completeTime != null">
        COMPLETE_TIME = #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addressId != null">
        ADDRESS_ID = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="daddressId != null">
        DADDRESS_ID = #{daddressId,jdbcType=INTEGER},
      </if>
      <if test="transportCompanyId != null">
        TRANSPORT_COMPANY_ID = #{transportCompanyId,jdbcType=INTEGER},
      </if>
      <if test="transportCode != null">
        TRANSPORT_CODE = #{transportCode,jdbcType=VARCHAR},
      </if>
      <if test="transportExpressCode != null">
        TRANSPORT_EXPRESS_CODE = #{transportExpressCode,jdbcType=VARCHAR},
      </if>
      <if test="paySn != null">
        PAY_SN = #{paySn,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.leimingtech.entity.ShopOrder">
    update SHOP_ORDER
    set ORDER_SN = #{orderSn,jdbcType=VARCHAR},
      MEMBER_ID = #{memberId,jdbcType=BIGINT},
      MEMBER_NAME = #{memberName,jdbcType=VARCHAR},
      MEMBER_EMAIL = #{memberEmail,jdbcType=VARCHAR},
      PAYMENT_NAME = #{paymentName,jdbcType=VARCHAR},
      PAYMENT_CODE = #{paymentCode,jdbcType=VARCHAR},
      PAY_ID = #{payId,jdbcType=INTEGER},
      PAYMENT_ID = #{paymentId,jdbcType=BIGINT},
      PAYMENT_STATE = #{paymentState,jdbcType=BIT},
      PAYMENT_TIME = #{paymentTime,jdbcType=TIMESTAMP},
      ORDER_MESSAGE = #{orderMessage,jdbcType=VARCHAR},
      GOODS_NUM = #{goodsNum,jdbcType=INTEGER},
      ORDER_AMOUNT = #{orderAmount,jdbcType=DECIMAL},
      DISCOUNT_AMOUNT = #{discountAmount,jdbcType=DECIMAL},
      GOODS_AMOUNT = #{goodsAmount,jdbcType=DECIMAL},
      ORDER_STATUS = #{orderStatus,jdbcType=BIT},
      REFUND_AMOUNT = #{refundAmount,jdbcType=DECIMAL},
      COMPLETE_TIME = #{completeTime,jdbcType=TIMESTAMP},
      ADDRESS_ID = #{addressId,jdbcType=INTEGER},
      DADDRESS_ID = #{daddressId,jdbcType=INTEGER},
      TRANSPORT_COMPANY_ID = #{transportCompanyId,jdbcType=INTEGER},
      TRANSPORT_CODE = #{transportCode,jdbcType=VARCHAR},
      TRANSPORT_EXPRESS_CODE = #{transportExpressCode,jdbcType=VARCHAR},
      PAY_SN = #{paySn,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>