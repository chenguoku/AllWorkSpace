<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leimingtech.mapper.ShopGoodsCsMapper">
  <resultMap id="BaseResultMap" type="com.leimingtech.entity.ShopGoodsCs">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="GOODS_ID" jdbcType="INTEGER" property="goodsId" />
    <result column="GOODS_CS_PART_NUMBER" jdbcType="INTEGER" property="goodsCsPartNumber" />
    <result column="SELL_TYPE" jdbcType="VARCHAR" property="sellType" />
    <result column="IS_NEW_ARRIVAL" jdbcType="BIT" property="isNewArrival" />
    <result column="IS_MAIN" jdbcType="BIT" property="isMain" />
    <result column="IS_SUB" jdbcType="BIT" property="isSub" />
    <result column="PRICE_TYPE" jdbcType="VARCHAR" property="priceType" />
    <result column="PROPER_PRICE" jdbcType="DECIMAL" property="properPrice" />
    <result column="SALE_PRICE" jdbcType="DECIMAL" property="salePrice" />
    <result column="DISCOUNT_PRICE" jdbcType="DECIMAL" property="discountPrice" />
    <result column="ZOZO_PRICE" jdbcType="DECIMAL" property="zozoPrice" />
    <result column="REAL_PRICE" jdbcType="DECIMAL" property="realPrice" />
    <result column="COLOR_ID" jdbcType="INTEGER" property="colorId" />
    <result column="COLOR_NAME" jdbcType="VARCHAR" property="colorName" />
    <result column="COLOR_CATEGORY_ID" jdbcType="INTEGER" property="colorCategoryId" />
    <result column="COLOR_CATEGORY_NAME" jdbcType="VARCHAR" property="colorCategoryName" />
    <result column="SIZE_ID" jdbcType="INTEGER" property="sizeId" />
    <result column="SIZE_NAME" jdbcType="VARCHAR" property="sizeName" />
    <result column="CART_LIMIT" jdbcType="INTEGER" property="cartLimit" />
    <result column="LIMIT_PER_CUSTOMER" jdbcType="VARCHAR" property="limitPerCustomer" />
    <result column="STOCK_QUANTITY" jdbcType="INTEGER" property="stockQuantity" />
    <result column="STOCK_EXTERNAL_QUANTITY" jdbcType="INTEGER" property="stockExternalQuantity" />
    <result column="STOCK_UNLIMITED" jdbcType="BIT" property="stockUnlimited" />
    <result column="LABEL" jdbcType="BIT" property="label" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, GOODS_ID, GOODS_CS_PART_NUMBER, SELL_TYPE, IS_NEW_ARRIVAL, IS_MAIN, IS_SUB, PRICE_TYPE, 
    PROPER_PRICE, SALE_PRICE, DISCOUNT_PRICE, ZOZO_PRICE, REAL_PRICE, COLOR_ID, COLOR_NAME, 
    COLOR_CATEGORY_ID, COLOR_CATEGORY_NAME, SIZE_ID, SIZE_NAME, CART_LIMIT, LIMIT_PER_CUSTOMER, 
    STOCK_QUANTITY, STOCK_EXTERNAL_QUANTITY, STOCK_UNLIMITED, LABEL
  </sql>
  <select id="selectByExample" parameterType="com.leimingtech.entity.ShopGoodsCsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SHOP_GOODS_CS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SHOP_GOODS_CS
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from SHOP_GOODS_CS
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.leimingtech.entity.ShopGoodsCsExample">
    delete from SHOP_GOODS_CS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.leimingtech.entity.ShopGoodsCs">
    insert into SHOP_GOODS_CS (ID, GOODS_ID, GOODS_CS_PART_NUMBER, 
      SELL_TYPE, IS_NEW_ARRIVAL, IS_MAIN, 
      IS_SUB, PRICE_TYPE, PROPER_PRICE, 
      SALE_PRICE, DISCOUNT_PRICE, ZOZO_PRICE, 
      REAL_PRICE, COLOR_ID, COLOR_NAME, 
      COLOR_CATEGORY_ID, COLOR_CATEGORY_NAME, SIZE_ID, 
      SIZE_NAME, CART_LIMIT, LIMIT_PER_CUSTOMER, 
      STOCK_QUANTITY, STOCK_EXTERNAL_QUANTITY, STOCK_UNLIMITED, 
      LABEL)
    values (#{id,jdbcType=VARCHAR}, #{goodsId,jdbcType=INTEGER}, #{goodsCsPartNumber,jdbcType=INTEGER}, 
      #{sellType,jdbcType=VARCHAR}, #{isNewArrival,jdbcType=BIT}, #{isMain,jdbcType=BIT}, 
      #{isSub,jdbcType=BIT}, #{priceType,jdbcType=VARCHAR}, #{properPrice,jdbcType=DECIMAL}, 
      #{salePrice,jdbcType=DECIMAL}, #{discountPrice,jdbcType=DECIMAL}, #{zozoPrice,jdbcType=DECIMAL}, 
      #{realPrice,jdbcType=DECIMAL}, #{colorId,jdbcType=INTEGER}, #{colorName,jdbcType=VARCHAR}, 
      #{colorCategoryId,jdbcType=INTEGER}, #{colorCategoryName,jdbcType=VARCHAR}, #{sizeId,jdbcType=INTEGER}, 
      #{sizeName,jdbcType=VARCHAR}, #{cartLimit,jdbcType=INTEGER}, #{limitPerCustomer,jdbcType=VARCHAR}, 
      #{stockQuantity,jdbcType=INTEGER}, #{stockExternalQuantity,jdbcType=INTEGER}, #{stockUnlimited,jdbcType=BIT}, 
      #{label,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.leimingtech.entity.ShopGoodsCs">
    insert into SHOP_GOODS_CS
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="goodsId != null">
        GOODS_ID,
      </if>
      <if test="goodsCsPartNumber != null">
        GOODS_CS_PART_NUMBER,
      </if>
      <if test="sellType != null">
        SELL_TYPE,
      </if>
      <if test="isNewArrival != null">
        IS_NEW_ARRIVAL,
      </if>
      <if test="isMain != null">
        IS_MAIN,
      </if>
      <if test="isSub != null">
        IS_SUB,
      </if>
      <if test="priceType != null">
        PRICE_TYPE,
      </if>
      <if test="properPrice != null">
        PROPER_PRICE,
      </if>
      <if test="salePrice != null">
        SALE_PRICE,
      </if>
      <if test="discountPrice != null">
        DISCOUNT_PRICE,
      </if>
      <if test="zozoPrice != null">
        ZOZO_PRICE,
      </if>
      <if test="realPrice != null">
        REAL_PRICE,
      </if>
      <if test="colorId != null">
        COLOR_ID,
      </if>
      <if test="colorName != null">
        COLOR_NAME,
      </if>
      <if test="colorCategoryId != null">
        COLOR_CATEGORY_ID,
      </if>
      <if test="colorCategoryName != null">
        COLOR_CATEGORY_NAME,
      </if>
      <if test="sizeId != null">
        SIZE_ID,
      </if>
      <if test="sizeName != null">
        SIZE_NAME,
      </if>
      <if test="cartLimit != null">
        CART_LIMIT,
      </if>
      <if test="limitPerCustomer != null">
        LIMIT_PER_CUSTOMER,
      </if>
      <if test="stockQuantity != null">
        STOCK_QUANTITY,
      </if>
      <if test="stockExternalQuantity != null">
        STOCK_EXTERNAL_QUANTITY,
      </if>
      <if test="stockUnlimited != null">
        STOCK_UNLIMITED,
      </if>
      <if test="label != null">
        LABEL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsCsPartNumber != null">
        #{goodsCsPartNumber,jdbcType=INTEGER},
      </if>
      <if test="sellType != null">
        #{sellType,jdbcType=VARCHAR},
      </if>
      <if test="isNewArrival != null">
        #{isNewArrival,jdbcType=BIT},
      </if>
      <if test="isMain != null">
        #{isMain,jdbcType=BIT},
      </if>
      <if test="isSub != null">
        #{isSub,jdbcType=BIT},
      </if>
      <if test="priceType != null">
        #{priceType,jdbcType=VARCHAR},
      </if>
      <if test="properPrice != null">
        #{properPrice,jdbcType=DECIMAL},
      </if>
      <if test="salePrice != null">
        #{salePrice,jdbcType=DECIMAL},
      </if>
      <if test="discountPrice != null">
        #{discountPrice,jdbcType=DECIMAL},
      </if>
      <if test="zozoPrice != null">
        #{zozoPrice,jdbcType=DECIMAL},
      </if>
      <if test="realPrice != null">
        #{realPrice,jdbcType=DECIMAL},
      </if>
      <if test="colorId != null">
        #{colorId,jdbcType=INTEGER},
      </if>
      <if test="colorName != null">
        #{colorName,jdbcType=VARCHAR},
      </if>
      <if test="colorCategoryId != null">
        #{colorCategoryId,jdbcType=INTEGER},
      </if>
      <if test="colorCategoryName != null">
        #{colorCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="sizeId != null">
        #{sizeId,jdbcType=INTEGER},
      </if>
      <if test="sizeName != null">
        #{sizeName,jdbcType=VARCHAR},
      </if>
      <if test="cartLimit != null">
        #{cartLimit,jdbcType=INTEGER},
      </if>
      <if test="limitPerCustomer != null">
        #{limitPerCustomer,jdbcType=VARCHAR},
      </if>
      <if test="stockQuantity != null">
        #{stockQuantity,jdbcType=INTEGER},
      </if>
      <if test="stockExternalQuantity != null">
        #{stockExternalQuantity,jdbcType=INTEGER},
      </if>
      <if test="stockUnlimited != null">
        #{stockUnlimited,jdbcType=BIT},
      </if>
      <if test="label != null">
        #{label,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.leimingtech.entity.ShopGoodsCsExample" resultType="java.lang.Integer">
    select count(*) from SHOP_GOODS_CS
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update SHOP_GOODS_CS
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsId != null">
        GOODS_ID = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsCsPartNumber != null">
        GOODS_CS_PART_NUMBER = #{record.goodsCsPartNumber,jdbcType=INTEGER},
      </if>
      <if test="record.sellType != null">
        SELL_TYPE = #{record.sellType,jdbcType=VARCHAR},
      </if>
      <if test="record.isNewArrival != null">
        IS_NEW_ARRIVAL = #{record.isNewArrival,jdbcType=BIT},
      </if>
      <if test="record.isMain != null">
        IS_MAIN = #{record.isMain,jdbcType=BIT},
      </if>
      <if test="record.isSub != null">
        IS_SUB = #{record.isSub,jdbcType=BIT},
      </if>
      <if test="record.priceType != null">
        PRICE_TYPE = #{record.priceType,jdbcType=VARCHAR},
      </if>
      <if test="record.properPrice != null">
        PROPER_PRICE = #{record.properPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.salePrice != null">
        SALE_PRICE = #{record.salePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.discountPrice != null">
        DISCOUNT_PRICE = #{record.discountPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.zozoPrice != null">
        ZOZO_PRICE = #{record.zozoPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.realPrice != null">
        REAL_PRICE = #{record.realPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.colorId != null">
        COLOR_ID = #{record.colorId,jdbcType=INTEGER},
      </if>
      <if test="record.colorName != null">
        COLOR_NAME = #{record.colorName,jdbcType=VARCHAR},
      </if>
      <if test="record.colorCategoryId != null">
        COLOR_CATEGORY_ID = #{record.colorCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.colorCategoryName != null">
        COLOR_CATEGORY_NAME = #{record.colorCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.sizeId != null">
        SIZE_ID = #{record.sizeId,jdbcType=INTEGER},
      </if>
      <if test="record.sizeName != null">
        SIZE_NAME = #{record.sizeName,jdbcType=VARCHAR},
      </if>
      <if test="record.cartLimit != null">
        CART_LIMIT = #{record.cartLimit,jdbcType=INTEGER},
      </if>
      <if test="record.limitPerCustomer != null">
        LIMIT_PER_CUSTOMER = #{record.limitPerCustomer,jdbcType=VARCHAR},
      </if>
      <if test="record.stockQuantity != null">
        STOCK_QUANTITY = #{record.stockQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.stockExternalQuantity != null">
        STOCK_EXTERNAL_QUANTITY = #{record.stockExternalQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.stockUnlimited != null">
        STOCK_UNLIMITED = #{record.stockUnlimited,jdbcType=BIT},
      </if>
      <if test="record.label != null">
        LABEL = #{record.label,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SHOP_GOODS_CS
    set ID = #{record.id,jdbcType=VARCHAR},
      GOODS_ID = #{record.goodsId,jdbcType=INTEGER},
      GOODS_CS_PART_NUMBER = #{record.goodsCsPartNumber,jdbcType=INTEGER},
      SELL_TYPE = #{record.sellType,jdbcType=VARCHAR},
      IS_NEW_ARRIVAL = #{record.isNewArrival,jdbcType=BIT},
      IS_MAIN = #{record.isMain,jdbcType=BIT},
      IS_SUB = #{record.isSub,jdbcType=BIT},
      PRICE_TYPE = #{record.priceType,jdbcType=VARCHAR},
      PROPER_PRICE = #{record.properPrice,jdbcType=DECIMAL},
      SALE_PRICE = #{record.salePrice,jdbcType=DECIMAL},
      DISCOUNT_PRICE = #{record.discountPrice,jdbcType=DECIMAL},
      ZOZO_PRICE = #{record.zozoPrice,jdbcType=DECIMAL},
      REAL_PRICE = #{record.realPrice,jdbcType=DECIMAL},
      COLOR_ID = #{record.colorId,jdbcType=INTEGER},
      COLOR_NAME = #{record.colorName,jdbcType=VARCHAR},
      COLOR_CATEGORY_ID = #{record.colorCategoryId,jdbcType=INTEGER},
      COLOR_CATEGORY_NAME = #{record.colorCategoryName,jdbcType=VARCHAR},
      SIZE_ID = #{record.sizeId,jdbcType=INTEGER},
      SIZE_NAME = #{record.sizeName,jdbcType=VARCHAR},
      CART_LIMIT = #{record.cartLimit,jdbcType=INTEGER},
      LIMIT_PER_CUSTOMER = #{record.limitPerCustomer,jdbcType=VARCHAR},
      STOCK_QUANTITY = #{record.stockQuantity,jdbcType=INTEGER},
      STOCK_EXTERNAL_QUANTITY = #{record.stockExternalQuantity,jdbcType=INTEGER},
      STOCK_UNLIMITED = #{record.stockUnlimited,jdbcType=BIT},
      LABEL = #{record.label,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.leimingtech.entity.ShopGoodsCs">
    update SHOP_GOODS_CS
    <set>
      <if test="goodsId != null">
        GOODS_ID = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsCsPartNumber != null">
        GOODS_CS_PART_NUMBER = #{goodsCsPartNumber,jdbcType=INTEGER},
      </if>
      <if test="sellType != null">
        SELL_TYPE = #{sellType,jdbcType=VARCHAR},
      </if>
      <if test="isNewArrival != null">
        IS_NEW_ARRIVAL = #{isNewArrival,jdbcType=BIT},
      </if>
      <if test="isMain != null">
        IS_MAIN = #{isMain,jdbcType=BIT},
      </if>
      <if test="isSub != null">
        IS_SUB = #{isSub,jdbcType=BIT},
      </if>
      <if test="priceType != null">
        PRICE_TYPE = #{priceType,jdbcType=VARCHAR},
      </if>
      <if test="properPrice != null">
        PROPER_PRICE = #{properPrice,jdbcType=DECIMAL},
      </if>
      <if test="salePrice != null">
        SALE_PRICE = #{salePrice,jdbcType=DECIMAL},
      </if>
      <if test="discountPrice != null">
        DISCOUNT_PRICE = #{discountPrice,jdbcType=DECIMAL},
      </if>
      <if test="zozoPrice != null">
        ZOZO_PRICE = #{zozoPrice,jdbcType=DECIMAL},
      </if>
      <if test="realPrice != null">
        REAL_PRICE = #{realPrice,jdbcType=DECIMAL},
      </if>
      <if test="colorId != null">
        COLOR_ID = #{colorId,jdbcType=INTEGER},
      </if>
      <if test="colorName != null">
        COLOR_NAME = #{colorName,jdbcType=VARCHAR},
      </if>
      <if test="colorCategoryId != null">
        COLOR_CATEGORY_ID = #{colorCategoryId,jdbcType=INTEGER},
      </if>
      <if test="colorCategoryName != null">
        COLOR_CATEGORY_NAME = #{colorCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="sizeId != null">
        SIZE_ID = #{sizeId,jdbcType=INTEGER},
      </if>
      <if test="sizeName != null">
        SIZE_NAME = #{sizeName,jdbcType=VARCHAR},
      </if>
      <if test="cartLimit != null">
        CART_LIMIT = #{cartLimit,jdbcType=INTEGER},
      </if>
      <if test="limitPerCustomer != null">
        LIMIT_PER_CUSTOMER = #{limitPerCustomer,jdbcType=VARCHAR},
      </if>
      <if test="stockQuantity != null">
        STOCK_QUANTITY = #{stockQuantity,jdbcType=INTEGER},
      </if>
      <if test="stockExternalQuantity != null">
        STOCK_EXTERNAL_QUANTITY = #{stockExternalQuantity,jdbcType=INTEGER},
      </if>
      <if test="stockUnlimited != null">
        STOCK_UNLIMITED = #{stockUnlimited,jdbcType=BIT},
      </if>
      <if test="label != null">
        LABEL = #{label,jdbcType=BIT},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.leimingtech.entity.ShopGoodsCs">
    update SHOP_GOODS_CS
    set GOODS_ID = #{goodsId,jdbcType=INTEGER},
      GOODS_CS_PART_NUMBER = #{goodsCsPartNumber,jdbcType=INTEGER},
      SELL_TYPE = #{sellType,jdbcType=VARCHAR},
      IS_NEW_ARRIVAL = #{isNewArrival,jdbcType=BIT},
      IS_MAIN = #{isMain,jdbcType=BIT},
      IS_SUB = #{isSub,jdbcType=BIT},
      PRICE_TYPE = #{priceType,jdbcType=VARCHAR},
      PROPER_PRICE = #{properPrice,jdbcType=DECIMAL},
      SALE_PRICE = #{salePrice,jdbcType=DECIMAL},
      DISCOUNT_PRICE = #{discountPrice,jdbcType=DECIMAL},
      ZOZO_PRICE = #{zozoPrice,jdbcType=DECIMAL},
      REAL_PRICE = #{realPrice,jdbcType=DECIMAL},
      COLOR_ID = #{colorId,jdbcType=INTEGER},
      COLOR_NAME = #{colorName,jdbcType=VARCHAR},
      COLOR_CATEGORY_ID = #{colorCategoryId,jdbcType=INTEGER},
      COLOR_CATEGORY_NAME = #{colorCategoryName,jdbcType=VARCHAR},
      SIZE_ID = #{sizeId,jdbcType=INTEGER},
      SIZE_NAME = #{sizeName,jdbcType=VARCHAR},
      CART_LIMIT = #{cartLimit,jdbcType=INTEGER},
      LIMIT_PER_CUSTOMER = #{limitPerCustomer,jdbcType=VARCHAR},
      STOCK_QUANTITY = #{stockQuantity,jdbcType=INTEGER},
      STOCK_EXTERNAL_QUANTITY = #{stockExternalQuantity,jdbcType=INTEGER},
      STOCK_UNLIMITED = #{stockUnlimited,jdbcType=BIT},
      LABEL = #{label,jdbcType=BIT}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>