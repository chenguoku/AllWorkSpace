<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leimingtech.mapper.ShopPaymentHistoryMapper">
  <resultMap id="BaseResultMap" type="com.leimingtech.entity.ShopPaymentHistory">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="PAYMENT_SN" jdbcType="VARCHAR" property="paymentSn" />
    <result column="PAYMENT_AMOUNT" jdbcType="DECIMAL" property="paymentAmount" />
    <result column="PAYMENT_METHOD_ID" jdbcType="CHAR" property="paymentMethodId" />
    <result column="PAYMENT_METHOD_CODE" jdbcType="CHAR" property="paymentMethodCode" />
    <result column="PAYMENT_METHOD_NAME" jdbcType="VARCHAR" property="paymentMethodName" />
    <result column="ORDER_ID" jdbcType="BIGINT" property="orderId" />
    <result column="ORDER_SN" jdbcType="VARCHAR" property="orderSn" />
    <result column="USER_ID" jdbcType="BIGINT" property="userId" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="PAYMENT_STATE" jdbcType="BIT" property="paymentState" />
    <result column="STORY_ID" jdbcType="BIGINT" property="storyId" />
    <result column="STORY_NAME" jdbcType="VARCHAR" property="storyName" />
    <result column="PAYMENT_DATE" jdbcType="TIMESTAMP" property="paymentDate" />
    <result column="CREATOR" jdbcType="VARCHAR" property="creator" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="UPDATER" jdbcType="VARCHAR" property="updater" />
    <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="DEL_FLAG" jdbcType="BIT" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, PAYMENT_SN, PAYMENT_AMOUNT, PAYMENT_METHOD_ID, PAYMENT_METHOD_CODE, PAYMENT_METHOD_NAME, 
    ORDER_ID, ORDER_SN, USER_ID, USER_NAME, PAYMENT_STATE, STORY_ID, STORY_NAME, PAYMENT_DATE, 
    CREATOR, CREATE_DATE, UPDATER, UPDATE_DATE, DEL_FLAG
  </sql>
  <select id="selectByExample" parameterType="com.leimingtech.entity.ShopPaymentHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SHOP_PAYMENT_HISTORY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SHOP_PAYMENT_HISTORY
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from SHOP_PAYMENT_HISTORY
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.leimingtech.entity.ShopPaymentHistoryExample">
    delete from SHOP_PAYMENT_HISTORY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.leimingtech.entity.ShopPaymentHistory">
    insert into SHOP_PAYMENT_HISTORY (ID, PAYMENT_SN, PAYMENT_AMOUNT, 
      PAYMENT_METHOD_ID, PAYMENT_METHOD_CODE, PAYMENT_METHOD_NAME, 
      ORDER_ID, ORDER_SN, USER_ID, 
      USER_NAME, PAYMENT_STATE, STORY_ID, 
      STORY_NAME, PAYMENT_DATE, CREATOR, 
      CREATE_DATE, UPDATER, UPDATE_DATE, 
      DEL_FLAG)
    values (#{id,jdbcType=BIGINT}, #{paymentSn,jdbcType=VARCHAR}, #{paymentAmount,jdbcType=DECIMAL}, 
      #{paymentMethodId,jdbcType=CHAR}, #{paymentMethodCode,jdbcType=CHAR}, #{paymentMethodName,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=BIGINT}, #{orderSn,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{userName,jdbcType=VARCHAR}, #{paymentState,jdbcType=BIT}, #{storyId,jdbcType=BIGINT}, 
      #{storyName,jdbcType=VARCHAR}, #{paymentDate,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{delFlag,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.leimingtech.entity.ShopPaymentHistory">
    insert into SHOP_PAYMENT_HISTORY
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="paymentSn != null">
        PAYMENT_SN,
      </if>
      <if test="paymentAmount != null">
        PAYMENT_AMOUNT,
      </if>
      <if test="paymentMethodId != null">
        PAYMENT_METHOD_ID,
      </if>
      <if test="paymentMethodCode != null">
        PAYMENT_METHOD_CODE,
      </if>
      <if test="paymentMethodName != null">
        PAYMENT_METHOD_NAME,
      </if>
      <if test="orderId != null">
        ORDER_ID,
      </if>
      <if test="orderSn != null">
        ORDER_SN,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="paymentState != null">
        PAYMENT_STATE,
      </if>
      <if test="storyId != null">
        STORY_ID,
      </if>
      <if test="storyName != null">
        STORY_NAME,
      </if>
      <if test="paymentDate != null">
        PAYMENT_DATE,
      </if>
      <if test="creator != null">
        CREATOR,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="updater != null">
        UPDATER,
      </if>
      <if test="updateDate != null">
        UPDATE_DATE,
      </if>
      <if test="delFlag != null">
        DEL_FLAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="paymentSn != null">
        #{paymentSn,jdbcType=VARCHAR},
      </if>
      <if test="paymentAmount != null">
        #{paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="paymentMethodId != null">
        #{paymentMethodId,jdbcType=CHAR},
      </if>
      <if test="paymentMethodCode != null">
        #{paymentMethodCode,jdbcType=CHAR},
      </if>
      <if test="paymentMethodName != null">
        #{paymentMethodName,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="paymentState != null">
        #{paymentState,jdbcType=BIT},
      </if>
      <if test="storyId != null">
        #{storyId,jdbcType=BIGINT},
      </if>
      <if test="storyName != null">
        #{storyName,jdbcType=VARCHAR},
      </if>
      <if test="paymentDate != null">
        #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.leimingtech.entity.ShopPaymentHistoryExample" resultType="java.lang.Integer">
    select count(*) from SHOP_PAYMENT_HISTORY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update SHOP_PAYMENT_HISTORY
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.paymentSn != null">
        PAYMENT_SN = #{record.paymentSn,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentAmount != null">
        PAYMENT_AMOUNT = #{record.paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentMethodId != null">
        PAYMENT_METHOD_ID = #{record.paymentMethodId,jdbcType=CHAR},
      </if>
      <if test="record.paymentMethodCode != null">
        PAYMENT_METHOD_CODE = #{record.paymentMethodCode,jdbcType=CHAR},
      </if>
      <if test="record.paymentMethodName != null">
        PAYMENT_METHOD_NAME = #{record.paymentMethodName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        ORDER_ID = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.orderSn != null">
        ORDER_SN = #{record.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentState != null">
        PAYMENT_STATE = #{record.paymentState,jdbcType=BIT},
      </if>
      <if test="record.storyId != null">
        STORY_ID = #{record.storyId,jdbcType=BIGINT},
      </if>
      <if test="record.storyName != null">
        STORY_NAME = #{record.storyName,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentDate != null">
        PAYMENT_DATE = #{record.paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        CREATOR = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null">
        UPDATER = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null">
        DEL_FLAG = #{record.delFlag,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SHOP_PAYMENT_HISTORY
    set ID = #{record.id,jdbcType=BIGINT},
      PAYMENT_SN = #{record.paymentSn,jdbcType=VARCHAR},
      PAYMENT_AMOUNT = #{record.paymentAmount,jdbcType=DECIMAL},
      PAYMENT_METHOD_ID = #{record.paymentMethodId,jdbcType=CHAR},
      PAYMENT_METHOD_CODE = #{record.paymentMethodCode,jdbcType=CHAR},
      PAYMENT_METHOD_NAME = #{record.paymentMethodName,jdbcType=VARCHAR},
      ORDER_ID = #{record.orderId,jdbcType=BIGINT},
      ORDER_SN = #{record.orderSn,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=BIGINT},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      PAYMENT_STATE = #{record.paymentState,jdbcType=BIT},
      STORY_ID = #{record.storyId,jdbcType=BIGINT},
      STORY_NAME = #{record.storyName,jdbcType=VARCHAR},
      PAYMENT_DATE = #{record.paymentDate,jdbcType=TIMESTAMP},
      CREATOR = #{record.creator,jdbcType=VARCHAR},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      UPDATER = #{record.updater,jdbcType=VARCHAR},
      UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      DEL_FLAG = #{record.delFlag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.leimingtech.entity.ShopPaymentHistory">
    update SHOP_PAYMENT_HISTORY
    <set>
      <if test="paymentSn != null">
        PAYMENT_SN = #{paymentSn,jdbcType=VARCHAR},
      </if>
      <if test="paymentAmount != null">
        PAYMENT_AMOUNT = #{paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="paymentMethodId != null">
        PAYMENT_METHOD_ID = #{paymentMethodId,jdbcType=CHAR},
      </if>
      <if test="paymentMethodCode != null">
        PAYMENT_METHOD_CODE = #{paymentMethodCode,jdbcType=CHAR},
      </if>
      <if test="paymentMethodName != null">
        PAYMENT_METHOD_NAME = #{paymentMethodName,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        ORDER_ID = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderSn != null">
        ORDER_SN = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="paymentState != null">
        PAYMENT_STATE = #{paymentState,jdbcType=BIT},
      </if>
      <if test="storyId != null">
        STORY_ID = #{storyId,jdbcType=BIGINT},
      </if>
      <if test="storyName != null">
        STORY_NAME = #{storyName,jdbcType=VARCHAR},
      </if>
      <if test="paymentDate != null">
        PAYMENT_DATE = #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        CREATOR = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null">
        UPDATER = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        DEL_FLAG = #{delFlag,jdbcType=BIT},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.leimingtech.entity.ShopPaymentHistory">
    update SHOP_PAYMENT_HISTORY
    set PAYMENT_SN = #{paymentSn,jdbcType=VARCHAR},
      PAYMENT_AMOUNT = #{paymentAmount,jdbcType=DECIMAL},
      PAYMENT_METHOD_ID = #{paymentMethodId,jdbcType=CHAR},
      PAYMENT_METHOD_CODE = #{paymentMethodCode,jdbcType=CHAR},
      PAYMENT_METHOD_NAME = #{paymentMethodName,jdbcType=VARCHAR},
      ORDER_ID = #{orderId,jdbcType=BIGINT},
      ORDER_SN = #{orderSn,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=BIGINT},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      PAYMENT_STATE = #{paymentState,jdbcType=BIT},
      STORY_ID = #{storyId,jdbcType=BIGINT},
      STORY_NAME = #{storyName,jdbcType=VARCHAR},
      PAYMENT_DATE = #{paymentDate,jdbcType=TIMESTAMP},
      CREATOR = #{creator,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      UPDATER = #{updater,jdbcType=VARCHAR},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      DEL_FLAG = #{delFlag,jdbcType=BIT}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>